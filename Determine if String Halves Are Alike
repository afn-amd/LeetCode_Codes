You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.
Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.
Return true if a and b are alike. Otherwise, return false.

Example 1:
Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.

Example 2:
Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.
___________________________________________________________________________________________________________________________________________________________________________________________________________________

class Solution(object):
    def halvesAreAlike(self, s):
        half = len(s)//2
        a, b = s[:half], s[half:]
        vowelsIna = self.countVowels(a)
        vowelsInb = self.countVowels(b)
        if vowelsIna == vowelsInb:
            return True
        return False

    def countVowels(self, word):
        vowelsCount = 0
        for alphabet in word:
            if alphabet == 'a' or alphabet == 'e' or alphabet == 'i' or alphabet == 'o' or alphabet == 'u' or alphabet == 'A' or alphabet == 'E' or alphabet == 'I' or alphabet == 'O' or alphabet == 'U':
                vowelsCount += 1
        return vowelsCount
