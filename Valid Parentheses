Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

    Open brackets must be closed by the same type of brackets.
    Open brackets must be closed in the correct order.
    Every close bracket has a corresponding open bracket of the same type.

 

Example 1:

Input: s = "()"
Output: true

Example 2:

Input: s = "()[]{}"
Output: true

Example 3:

Input: s = "(]"
Output: false
___________________________________________________________________________________________________________________________________________________________________________________________________________________

class Solution(object):
    def isValid(self, s):
        myStack = []
        for i in range(0, len(s)):
            if s[i] == '(':
                myStack.append(1)
            elif s[i] == '{':
                myStack.append(2)
            elif s[i] == '[':
                myStack.append(3)
            else:
                if not myStack:
                    return False
                else:
                    if s[i] == ')':
                        if myStack[len(myStack) - 1] == 1:
                            myStack.pop(len(myStack) - 1)
                        else:
                            return False
                    elif s[i] == '}':
                        if myStack[len(myStack) - 1] == 2:
                            myStack.pop(len(myStack) - 1)
                        else:
                            return False
                    elif s[i] == ']':
                        if myStack[len(myStack) - 1] == 3:
                            myStack.pop(len(myStack) - 1)
                        else:
                            return False
        if myStack:
            return False
        else:
            return True
